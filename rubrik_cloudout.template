{
"AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Complete the AWS configuration process required for the Rubrik CloudOut which uses an S3 bucket for archiving to Amazon.",
    "Metadata": {
        "AWS::CloudFormation::Interface" : {
            "ParameterGroups" : [
              {
                "Label": { "default" : "Storage Configuration" },
                "Parameters": [ "CreateS3NewBucket", "S3BucketName" ]
              },
              {
                "Label": { "default" : "IAM Users and Roles" },
                "Parameters": [ "CreateNewUser", "IAMUserName" ]
              },
              {
                "Label": { "default" : "Optional" },
                "Parameters": [ "UserPolicyName" ]
              }
            ]
          }

    },

    "Parameters": {
    
        "CreateS3NewBucket": {
            "Description": "Create a new S3 Bucket to use as a Rubrik archival location.",
            "Type": "String",
            "Default": "yes",
            "AllowedValues": [ "yes", "no" ],
            "ConstraintDescription": "Choose 'yes' to create a new S3 Bucket or 'no' to use an existing bucket."
        },

        "S3BucketName": {
            "Description": "The name of the S3 Bucket used as a Rubrik archival location.",
            "Type": "String",
            "MinLength": "3",
            "MaxLength": "63",
            "AllowedPattern" : "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d\\.]$",
            "ConstraintDescription" : "Can only contain lowercase characters, numbers, periods, and dashes"
        },

        "CreateNewUser" : {
            "Description": "Create a new IAM user specific to Rubrik CloudOut.",
            "Type": "String",
            "Default": "yes",
            "AllowedValues": [ "yes", "no" ],
            "ConstraintDescription"	: "Choose 'yes' to create a new IAM User specific to Rubrk CloudOut or 'no' to use an existing IAM User."
          },

        "IAMUserName" : {
            "Description": "The name of the IAM User to assign the new CloudOut specific policies to.",
            "Type": "String",
            "Default": "rubrik-cloudout"
        },

        "UserPolicyName": {
            "Description": "S3 Security policy used for Rubrik CloudOut.",
            "Type": "String",
            "Default": "rubrik-cloudout"
        }

    },

    "Mappings": {

    },

    "Conditions": {
        "CreateBucket" : { "Fn::Equals" : [ {"Ref" : "CreateS3NewBucket"}, "yes" ] },
        "CreateIAMuser" : { "Fn::Equals" : [ {"Ref" : "CreateNewUser"}, "yes" ] },
        "DontCreateIAMuser" : { "Fn::Equals" : [ {"Ref" : "CreateNewUser"}, "no" ] }

    },

    "Resources": {
        "CreateS3Bucket": {
            "Type": "AWS::S3::Bucket",
            "Condition" : "CreateBucket",
            "DeletionPolicy" : "Retain",
            "Properties": {
                "AccessControl": "Private",
                "BucketName": { "Ref" : "S3BucketName" }
                
            }
        },    

        "CreateNewIAMUser": {
            "Type": "AWS::IAM::User",
            "Condition" : "CreateIAMuser",
            "Properties": {
                "UserName": { "Ref" : "IAMUserName" }
            }
        },
      
        "IAMUserAccessKeys": {
            "Type": "AWS::IAM::AccessKey",
            "Condition" : "CreateIAMuser",
            "DependsOn": "CreateNewIAMUser",
            "Properties": {
                "UserName": { "Ref" : "IAMUserName" }
            }
        },

        "CreatePolicyForNewUser": {
            "Type": "AWS::IAM::Policy",
            "DependsOn": "CreateNewIAMUser",
            "Condition" : "CreateIAMuser",
            "Properties": {
                "PolicyName": { "Ref" : "UserPolicyName" },
                "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:ListAllMyBuckets",
                            "s3:HeadBucket"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:*"
                        ],
                        "Resource": [
                            { "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" } ] ] },
                            { "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" }, "/*" ] ] }
                        ]
                    }
                ]
                },
                "Users": [ { "Ref" : "IAMUserName" } ]
            }
        },

        "CreatePolicyForExistingUser": {
            "Type": "AWS::IAM::Policy",
            "Condition" : "DontCreateIAMuser",
            "Properties": {
                "PolicyName": { "Ref" : "UserPolicyName" },
                "PolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:ListAllMyBuckets",
                            "s3:HeadBucket"
                        ],
                        "Resource": "*"
                    },
                    {
                        "Effect": "Allow",
                        "Action": [
                            "s3:*"
                        ],
                        "Resource": [
                            { "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" } ] ] },
                            { "Fn::Join" : [ "", [ "arn:aws:s3:::", { "Ref": "S3BucketName" }, "/*" ] ] }
                        ]
                    }
                ]
                },
                "Users": [ { "Ref" : "IAMUserName" } ]
            }
        }

    },
    
    "Outputs": {
        "IAMUserAccessKey" : {
          "Condition": "CreateIAMuser",
          "Description": "Access Key for the new IAM User.",
          "Value" : { "Ref" : "IAMUserAccessKeys" }
        },
        "IAMUserSecretKey" : {
          "Condition": "CreateIAMuser",
          "Description": "Secret Key for the new IAM user.",
          "Value" : { "Fn::GetAtt" : [ "IAMUserAccessKeys", "SecretAccessKey" ] }
        }
      }
}